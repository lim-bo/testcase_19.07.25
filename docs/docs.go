// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/subs/add": {
            "post": {
                "description": "Recieves new subscription info and\nsaves it in DB",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subs"
                ],
                "summary": "Registering subscription",
                "parameters": [
                    {
                        "description": "New subscription data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Subscription"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/subs/list": {
            "get": {
                "description": "Returns list of subscriptions with given\nunnecessary filters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subs"
                ],
                "summary": "Listing subscriptions",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Spotify",
                        "description": "Sub's service name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "60601fee-2bf1-4721-ae6f-7636e79a0cba",
                        "description": "User ID",
                        "name": "uid",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Returned rows limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset for paginations",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "name, uid, id, created_at, expires, price",
                        "description": "Filed name for sorting by",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Subscription"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/subs/sum": {
            "get": {
                "description": "Recieving summary subscriptions price with\nprovided filters and period values (start, end),\nif start or end undefined, returns sum for all the time.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subs"
                ],
                "summary": "Getting price sum",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Spotify",
                        "description": "Sub's service name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "01-2015",
                        "description": "Start period",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "03-2016",
                        "description": "End period",
                        "name": "end",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "60601fee-2bf1-4721-ae6f-7636e79a0cba",
                        "description": "User ID",
                        "name": "uid",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.sumResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/subs/{id}": {
            "get": {
                "description": "Provides subscription data by ID in path",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subs"
                ],
                "summary": "Getting subcription info",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Subscription ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Subscription"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Recieves new subscription info for update\nby provided id in path",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subs"
                ],
                "summary": "Updating subscription",
                "parameters": [
                    {
                        "description": "New subscription data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Subscription"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes subscription with given id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subs"
                ],
                "summary": "Deleting subcription",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Subscription ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.sumResponse": {
            "type": "object",
            "properties": {
                "sum": {
                    "type": "integer",
                    "example": 1000
                }
            }
        },
        "models.Subscription": {
            "type": "object",
            "properties": {
                "expires": {
                    "type": "string",
                    "example": "02-2026"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "yandex"
                },
                "price": {
                    "type": "integer",
                    "example": 400
                },
                "start_date": {
                    "type": "string",
                    "example": "01-2025"
                },
                "uid": {
                    "type": "string",
                    "example": "60601fee-2bf1-4721-ae6f-7636e79a0cba"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{"http"},
	Title:            "Subs-API",
	Description:      "API-service for managing users' subscriptions",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
